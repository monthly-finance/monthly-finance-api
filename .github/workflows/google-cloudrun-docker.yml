name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  PROJECT_ID: 'monthly-finance-415201' # TODO: update Google Cloud project id
  GAR_LOCATION: 'us-east1' # TODO: update Artifact Registry location
  SERVICE: 'api-image' # TODO: update Cloud Run service name
  ARTIFACTORY: 'monthly-finance-api/api-images'
  REGION: 'us-east1' # TODO: update Cloud Run service region

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: make env file
        run: |
          echo "POSTGRES_INSTANCE_CONNECTION_NAME={{ secrets.POSTGRES_INSTANCE_CONNECTION_NAME }}"
          echo "POSTGRES_USER={{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD={{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DATABASE={{ secrets.POSTGRES_DATABASE }}" >> .env
          echo "PORT={{ secrets.PORT }}" >> .env
          echo "MODE=DEV" >> .env
          echo "RUN_MIGRATIONS=true" >> .env
          echo "AUTH_SECRET={{ serets.AUTH_SECRET }}" >> .env

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      # NOTE: Alternative option - authentication via credentials json
      # - name: Google Auth
      #   id: auth
      #   uses: 'google-github-actions/auth@v0'
      #   with:
      #     credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # BEGIN - Docker auth and build (NOTE: If you already have a container image, these Docker steps can be omitted)

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACTORY }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACTORY }}:${{ github.sha }}"

      # END - Docker auth and build

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACTORY }}:${{ github.sha }}

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
